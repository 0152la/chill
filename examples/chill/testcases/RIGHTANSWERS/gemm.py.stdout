Unhandled case in scanner: SourceFile
Looking for def int
Looking for def int
Looking for def int
Looking for def int
Looking for def int
Looking for def int
Looking for def int
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: SourceFile
Unhandled case in scanner: FunctionDecl
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: VarDecl
Unhandled case in scanner: VarDecl
Unhandled case in scanner: VarDecl
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ArraySubscriptExpr
Relation r   {[j,k,i] : TRUE }
s1: (dim:0) (dim:1) (dim:2) 
{[j,k,i] -> [chill_t1,chill_t2,chill_t3] : i = chill_t1 && j = chill_t2 && k = chill_t3 }
{ Sym=[n] [chill_t1,chill_t2,chill_t3] -> [chill_t4,chill_t5,chill_t6,chill_t7] : exists ( alpha : chill_t4 = 8alpha && chill_t1 = chill_t5 && chill_t2 = chill_t6 && chill_t3 = chill_t7 && 0, chill_t6-7 <= chill_t4 <= chill_t6) }
{ Sym=[n] [chill_t4,chill_t5,chill_t6,chill_t7] -> [chill_t8,chill_t9,chill_t10,chill_t11,chill_t12] : exists ( alpha : chill_t8 = 128alpha && chill_t4 = chill_t9 && chill_t5 = chill_t10 && chill_t6 = chill_t11 && chill_t7 = chill_t12 && 0, chill_t10-127 <= chill_t8 <= chill_t10) }
{ Sym=[n] [chill_t8,chill_t9,chill_t10,chill_t11,chill_t12] -> [chill_t13,chill_t14,chill_t15,chill_t16,chill_t17,chill_t18] : exists ( alpha : chill_t13 = 512alpha && chill_t8 = chill_t14 && chill_t9 = chill_t15 && chill_t10 = chill_t16 && chill_t11 = chill_t17 && chill_t12 = chill_t18 && 0, chill_t18-511 <= chill_t13 <= chill_t18) }
{[chill_t13,chill_t14,chill_t15,chill_t16,chill_t17,chill_t18] -> [Out_1,Out_2,Out_3,Out_4] : FALSE }


{[chill_t13,chill_t14,chill_t15,chill_t16,chill_t17,chill_t18] -> [chill_t21,chill_t22,chill_t23,chill_t24,chill_t25,chill_t26] : chill_t13 = chill_t21 && chill_t14 = chill_t22 && chill_t15 = chill_t23 && chill_t16 = chill_t24 && chill_t17 = chill_t25 && chill_t18 = chill_t26 }
{[chill_t21,chill_t22,chill_t23,chill_t24,chill_t25,chill_t26] -> [Out_1,Out_2,Out_3,Out_4,Out_5] : FALSE }


{[chill_t21,chill_t22,chill_t23,chill_t24,chill_t25,chill_t26] -> [chill_t29,chill_t30,chill_t31,chill_t32,chill_t33,chill_t34] : chill_t21 = chill_t29 && chill_t22 = chill_t30 && chill_t23 = chill_t31 && chill_t24 = chill_t32 && chill_t25 = chill_t33 && chill_t26 = chill_t34 }
{[chill_t29,chill_t30,chill_t31,chill_t32,chill_t33,chill_t34] -> [chill_t35,chill_t36,chill_t37,chill_t38,chill_t39,chill_t40] : chill_t29 = chill_t35 && chill_t30 = chill_t36 && chill_t31 = chill_t37 && chill_t32 = chill_t38 && chill_t33 = chill_t39 && chill_t34 = chill_t40 }
{[chill_t35,chill_t36,chill_t37,chill_t38,chill_t39,chill_t40] -> [chill_t41,chill_t42,chill_t43,chill_t44,chill_t45,chill_t46] : chill_t35 = chill_t41 && chill_t36 = chill_t42 && chill_t37 = chill_t43 && chill_t38 = chill_t44 && chill_t39 = chill_t45 && chill_t40 = chill_t46 }
{[chill_t41,chill_t42,chill_t43,chill_t44,chill_t45,chill_t46] -> [chill_t47,chill_t48,chill_t49,chill_t50,chill_t51,chill_t52] : chill_t41 = chill_t47 && chill_t42 = chill_t48 && chill_t43 = chill_t49 && chill_t44 = chill_t50 && chill_t45 = chill_t51 && chill_t46 = chill_t52 }
{[chill_t47,chill_t48,chill_t49,chill_t50,chill_t51,chill_t52] -> [chill_t53,chill_t54,chill_t55,chill_t56,chill_t57,chill_t58] : chill_t47 = chill_t53 && chill_t48 = chill_t54 && chill_t49 = chill_t55 && chill_t50 = chill_t56 && chill_t51 = chill_t57 && chill_t52 = chill_t58 }
{[chill_t47,chill_t48,chill_t49,chill_t50,chill_t51,chill_t52] -> [chill_t53,chill_t54,chill_t55,chill_t56,chill_t57,chill_t58] : chill_t47 = chill_t53 && chill_t48 = chill_t54 && chill_t49 = chill_t55 && chill_t50 = chill_t56 && chill_t51 = chill_t57 && chill_t52 = chill_t58 }
{[chill_t53,chill_t54,chill_t55,chill_t56,chill_t57,chill_t58] -> [chill_t59,chill_t60,chill_t61,chill_t62,chill_t63,chill_t64] : chill_t53 = chill_t59 && chill_t54 = chill_t60 && chill_t55 = chill_t61 && chill_t56 = chill_t62 && chill_t57 = chill_t63 && chill_t58 = chill_t64 }
{[chill_t53,chill_t54,chill_t55,chill_t56,chill_t57,chill_t58] -> [chill_t59,chill_t60,chill_t61,chill_t62,chill_t63,chill_t64] : chill_t53 = chill_t59 && chill_t54 = chill_t60 && chill_t55 = chill_t61 && chill_t56 = chill_t62 && chill_t57 = chill_t63 && chill_t58 = chill_t64 }
{[chill_t59,chill_t60,chill_t61,chill_t62,chill_t63,chill_t64] -> [chill_t65,chill_t66,chill_t67,chill_t68,chill_t69,chill_t70] : chill_t59 = chill_t65 && chill_t60 = chill_t66 && chill_t61 = chill_t67 && chill_t62 = chill_t68 && chill_t63 = chill_t69 && chill_t64 = chill_t70 }
{[chill_t59,chill_t60,chill_t61,chill_t62,chill_t63,chill_t64] -> [chill_t65,chill_t66,chill_t67,chill_t68,chill_t69,chill_t70] : chill_t59 = chill_t65 && chill_t60 = chill_t66 && chill_t61 = chill_t67 && chill_t62 = chill_t68 && chill_t63 = chill_t69 && chill_t64 = chill_t70 }
{[chill_t65,chill_t66,chill_t67,chill_t68,chill_t69,chill_t70] -> [chill_t71,chill_t72,chill_t73,chill_t74,chill_t75,chill_t76] : chill_t65 = chill_t71 && chill_t66 = chill_t72 && chill_t67 = chill_t73 && chill_t68 = chill_t74 && chill_t69 = chill_t75 && chill_t70 = chill_t76 }
{[chill_t65,chill_t66,chill_t67,chill_t68,chill_t69,chill_t70] -> [chill_t71,chill_t72,chill_t73,chill_t74,chill_t75,chill_t76] : chill_t65 = chill_t71 && chill_t66 = chill_t72 && chill_t67 = chill_t73 && chill_t68 = chill_t74 && chill_t69 = chill_t75 && chill_t70 = chill_t76 }

xforms:
{[In_1,In_2,In_3,In_4,In_5,In_6] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9,Out_10,Out_11,Out_12,Out_13] : In_1 = Out_2 && In_2 = Out_4 && In_3 = Out_6 && In_4 = Out_8 && In_5 = Out_10 && In_6 = Out_12 && Out_1 = 0 && Out_3 = 0 && Out_5 = 1 && Out_7 = 2 && Out_9 = 1 && Out_11 = 0 && Out_13 = 0 }

{[In_1,In_2,In_3,In_4] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9] : Out_2 = In_1 && Out_4 = In_2 && Out_6 = In_3 && Out_8 = In_4 && Out_1 = 0 && Out_3 = 0 && Out_5 = 0 && Out_7 = 0 && Out_9 = 0 }

{[In_1,In_2,In_3,In_4,In_5] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9,Out_10,Out_11] : Out_2 = In_1 && Out_4 = In_2 && Out_6 = In_3 && Out_8 = In_4 && Out_10 = In_5 && Out_1 = 0 && Out_3 = 0 && Out_5 = 1 && Out_7 = 0 && Out_9 = 0 && Out_11 = 0 }

{[In_1,In_2,In_3] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7] : In_1 = Out_2 && In_2 = Out_4 && Out_6 = In_3 && Out_3 = 0 && Out_1 = 0 && Out_5 = 1 && Out_7 = 1 }

{[In_1,In_2,In_3,In_4,In_5,In_6] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9,Out_10,Out_11,Out_12,Out_13] : Out_7 = 3 && Out_2 = In_1 && Out_3 = 0 && In_2 = Out_4 && Out_5 = 1 && Out_6 = In_3 && In_4 = Out_8 && Out_9 = 0 && In_5 = Out_10 && Out_11 = 0 && Out_12 = In_6 && Out_13 = 0 && Out_1 = 0 }

{[In_1,In_2,In_3,In_4,In_5,In_6] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9,Out_10,Out_11,Out_12,Out_13] : In_1 = Out_2 && In_2 = Out_4 && In_3 = Out_6 && In_4 = Out_8 && In_5 = Out_10 && In_6 = Out_12 && Out_1 = 0 && Out_3 = 0 && Out_5 = 1 && Out_7 = 2 && Out_9 = 1 && Out_11 = 0 && Out_13 = 1 }

{[In_1,In_2,In_3,In_4] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9] : In_1 = Out_2 && In_2 = Out_4 && Out_6 = In_3 && In_4 = Out_8 && Out_1 = 0 && Out_5 = 1 && Out_3 = 0 && Out_7 = 2 && Out_9 = 0 }

{[In_1,In_2,In_3,In_4,In_5,In_6] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9,Out_10,Out_11,Out_12,Out_13] : Out_9 = 2 && In_1 = Out_2 && Out_3 = 0 && Out_4 = In_2 && Out_5 = 1 && Out_6 = In_3 && Out_7 = 2 && Out_8 = In_4 && In_5 = Out_10 && Out_11 = 0 && Out_12 = In_6 && Out_13 = 0 && Out_1 = 0 }

{[In_1,In_2,In_3,In_4,In_5,In_6] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9,Out_10,Out_11,Out_12,Out_13] : Out_9 = 2 && In_1 = Out_2 && Out_3 = 0 && Out_4 = In_2 && Out_5 = 1 && Out_6 = In_3 && Out_7 = 2 && Out_8 = In_4 && In_5 = Out_10 && Out_11 = 0 && Out_12 = In_6 && Out_13 = 1 && Out_1 = 0 }

{[In_1,In_2,In_3,In_4,In_5,In_6] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9,Out_10,Out_11,Out_12,Out_13] : exists ( alpha,beta,gamma,delta,tau,sigma,chi,omega,pi,ni,Alpha,Beta,Gamma : ( alpha = Out_1 && beta = Out_2 && gamma = Out_3 && delta = Out_4 && tau = Out_5 && sigma = Out_6 && chi = Out_7 && omega = Out_8 && pi = Out_9 && ni = Out_10 && Alpha = Out_11 && Beta = Out_12 && Out_13 = 2 && In_1 = beta && In_2 = delta && In_3 = sigma && In_4 = omega && In_5 = ni && In_6 = Beta && alpha = 0 && gamma = 0 && tau = 1 && chi = 2 && pi = 1 && Alpha = 0 && Gamma = 0 )) }


IS:
{ Sym=[n,over1,over2] [chill_t71,chill_t72,chill_t73,chill_t74,chill_t75,chill_t76] : exists ( alpha,beta,gamma,delta : chill_t73 = 8alpha && chill_t72 = 128beta && chill_t71 = 512delta && chill_t74+chill_t72+2gamma = 0 && 0, chill_t76-511 <= chill_t71 <= chill_t76 <= n-1 && 0, chill_t74-126 <= chill_t72 <= chill_t74 <= n-1 && 0, chill_t75-7 <= chill_t73 <= chill_t75 <= n-1 && 0 <= chill_t74 && 0 <= chill_t76 && 0 <= chill_t75 && over1+chill_t74 < n && over2+chill_t75 < n) and chill_t73 <= chill_t75 and exists ( e11,e12 : ( chill_t75 = e11+2e12 && chill_t73 <= e11 and ( chill_t73 = e11 ) )) }

{ Sym=[n] [chill_t13,chill_t14,chill_t19,chill_t20] : exists ( alpha,beta : chill_t14 = 128alpha && chill_t13 = 512beta && 0, chill_t19-511 <= chill_t13 <= chill_t19 <= n-1 && 0, chill_t20-127 <= chill_t14 <= chill_t20 <= n-1) }

{ Sym=[n] [chill_t21,chill_t22,chill_t23,chill_t27,chill_t28] : exists ( alpha,beta,gamma : chill_t23 = 8beta && chill_t22 = 128alpha && chill_t21 = 512gamma && 0, chill_t28-511 <= chill_t21 <= chill_t28 <= n-1 && 0, chill_t27-7 <= chill_t23 <= chill_t27 <= n-1 && 0 <= chill_t22 < n) }

{ Sym=[n] [chill_t1,chill_t2,chill_t3] : exists ( alpha,beta,gamma : chill_t3 = 8beta && chill_t2 = 128alpha && chill_t1 = 512gamma && 0 <= chill_t1 < n && 0 <= chill_t2 < n && 0 <= chill_t3 < n && 1 <= n) }

{ Sym=[n,over1] [chill_t41,chill_t42,chill_t43,chill_t44,chill_t45,chill_t46] : exists ( alpha,beta,gamma : chill_t43 = 8alpha && chill_t42 = 128beta && chill_t41 = 512gamma && 0, chill_t46-511 <= chill_t41 <= chill_t46 <= n-1 && 0, chill_t44-127 <= chill_t42 <= chill_t44 <= n-1 && 0, chill_t45-7 <= chill_t43 <= chill_t45 <= n-1 && 0 <= chill_t44 && 0 <= chill_t46 && 0 <= chill_t45) and  not ( chill_t44+over1 < n ) }

{ Sym=[n,over1,over2] [chill_t71,chill_t72,chill_t73,chill_t74,chill_t75,chill_t76] : exists ( alpha,beta,gamma,delta : chill_t73 = 8alpha && chill_t72 = 128beta && chill_t71 = 512delta && chill_t74+chill_t72+2gamma = 0 && 0, chill_t76-511 <= chill_t71 <= chill_t76 <= n-1 && 0, chill_t74-126 <= chill_t72 <= chill_t74 <= n-1 && 0, chill_t75-7 <= chill_t73 <= chill_t75 <= n-1 && 0 <= chill_t74 && 0 <= chill_t76 && 0 <= chill_t75 && over1+chill_t74 < n && over2+chill_t75 < n) and chill_t73 <= chill_t75 and exists ( e13,e14 : ( chill_t75 = e13+2e14 && chill_t73 <= e13 and ( chill_t73 = e13 ) )) }

{ Sym=[n,over1] [chill_t1,chill_t2,chill_t3,chill_t4] : exists ( alpha,beta,gamma,delta : chill_t3 = 8beta && chill_t2 = 128alpha && chill_t1 = 512delta && chill_t4+chill_t2+2gamma = 0 && 0, chill_t4-126 <= chill_t2 <= chill_t4 <= n-1 && 0 <= chill_t1 < n && 0 <= chill_t3 < n && over1+chill_t4 < n && 1 <= n) }

{ Sym=[n,over1,over2] [chill_t59,chill_t60,chill_t61,chill_t62,chill_t63,chill_t64] : exists ( alpha,beta,gamma,delta : chill_t61 = 8alpha && chill_t60 = 128beta && chill_t59 = 512delta && chill_t62+chill_t60+2gamma = 0 && 0, chill_t64-511 <= chill_t59 <= chill_t64 <= n-1 && 0, chill_t62-126 <= chill_t60 <= chill_t62 <= n-1 && 0, chill_t63-7 <= chill_t61 <= chill_t63 <= n-1 && 0 <= chill_t62 && 0 <= chill_t64 && 0 <= chill_t63 && over1+chill_t62 < n) and  not ( chill_t63+over2 < n ) }

{ Sym=[n,over1,over2] [chill_t59,chill_t60,chill_t61,chill_t62,chill_t63,chill_t64] : exists ( alpha,beta,gamma,delta : chill_t61 = 8alpha && chill_t60 = 128beta && chill_t59 = 512delta && chill_t62+chill_t60+2gamma = 0 && 0, chill_t64-511 <= chill_t59 <= chill_t64 <= n-1 && 0, chill_t62-126 <= chill_t60 <= chill_t62 <= n-1 && 0, chill_t63-7 <= chill_t61 <= chill_t63 <= n-1 && 0 <= chill_t62 && 0 <= chill_t64 && 0 <= chill_t63 && over1+chill_t62 < n) and  not ( chill_t63+over2 < n ) }

{ Sym=[n,over1,over2] [chill_t71,chill_t72,chill_t73,chill_t74,chill_t75,chill_t76] : exists ( alpha,beta,gamma,delta : chill_t73 = 8alpha && chill_t72 = 128beta && chill_t71 = 512delta && chill_t74+chill_t72+2gamma = 0 && 0, chill_t76-511 <= chill_t71 <= chill_t76 <= n-1 && 0, chill_t74-126 <= chill_t72 <= chill_t74 <= n-1 && 0, chill_t75-7 <= chill_t73 <= chill_t75 <= n-1 && 0 <= chill_t74 && 0 <= chill_t76 && 0 <= chill_t75 && over1+chill_t74 < n && over2+chill_t75 < n) and chill_t73 <= chill_t75 and exists ( e11,e12 : ( chill_t75 = e11+2e12 && chill_t73 <= e11 and ( chill_t73 = e11 ) )) }


known:
{ Sym=[over1,over2] [In_1,In_2,In_3,In_4,In_5,In_6,In_7,In_8,In_9,In_10,In_11,In_12,In_13] : 0 <= over1 <= 1 and 0 <= over2 <= 1 }


