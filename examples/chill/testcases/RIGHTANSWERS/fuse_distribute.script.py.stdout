Unhandled case in scanner: SourceFile
Looking for def double
Looking for def double
Looking for def int
Looking for def int
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: FloatingLiteral
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: FloatingLiteral
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: SourceFile
Unhandled case in scanner: FunctionDecl
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: VarDecl
Unhandled case in scanner: VarDecl
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: FloatingLiteral
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: FloatingLiteral
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: ArraySubscriptExpr
Relation r   {[i,j] : TRUE }
Relation r   {[i,j] : TRUE }
Relation r   {[i,j] : TRUE }
s1: (dim:0) (dim:1) 
s2: (dim:0) (dim:1) 
s3: (dim:0) (dim:1) 
for(t2 = 0; t2 <= 99; t2++) {
  for(t4 = 0; t4 <= 99; t4++) {
    s0(t2,t4);
    s1(t2,t4);
  }
  for(t4 = 0; t4 <= 98; t4++) {
    s2(t2,t4);
  }
}


for(t2 = 0; t2 <= 99; t2++) {
  for(t4 = 0; t4 <= 99; t4++) {
    s0(t2,t4);
  }
  for(t4 = 0; t4 <= 99; t4++) {
    s1(t2,t4);
  }
  for(t4 = 0; t4 <= 98; t4++) {
    s2(t2,t4);
  }
}


for(t2 = 0; t2 <= 99; t2++) {
  for(t4 = 0; t4 <= 99; t4++) {
    s0(t2,t4);
  }
  for(t4 = 0; t4 <= 99; t4++) {
    s1(t2,t4);
  }
  for(t4 = 1; t4 <= 99; t4++) {
    s2(t2,t4-1);
  }
}


{[i,j] -> [chill_t1,chill_t2] : i = chill_t1 && j = chill_t2 }
{[i,j] -> [chill_t1,chill_t2] : i = chill_t1 && j = chill_t2 }
{[i,j] -> [chill_t1,chill_t2] : i = chill_t1 && 1+j = chill_t2 }
for(t2 = 0; t2 <= 99; t2++) {
  for(t4 = 0; t4 <= 99; t4++) {
    s0(t2,t4);
  }
  s1(t2,0);
  for(t4 = 1; t4 <= 99; t4++) {
    s1(t2,t4);
    s2(t2,t4);
  }
}


