Omega initialized
in C, initchill() to set up C methods to be called from python
"/home/derick/dev/chill/chill-src/examples/chill/testcases/unroll.c", line 5: warning: 
          variable "k" was declared but never referenced
    int i, j, k;
              ^

ConvertRoseFile(  SgGlobal *sg, filename unroll.c );
TOPMOST located node
sourcefile is '/home/derick/dev/chill/chill-src/examples/chill/testcases/unroll.c'
426 top nodes

functiondecl                     foo blurb declarations
nodefile   /home/derick/dev/chill/chill-src/examples/chill/testcases/unroll.c
sourcefile /home/derick/dev/chill/chill-src/examples/chill/testcases/unroll.c
SAME FILE

ConvertRoseFunctionDecl( foo )

hey! comments! on a FunctionDecl
1 preprocessing info

a #define #define N 14



***  ConvertRoseInitName()  n
initname n
varname 'n'
original vartype 0x54b2c550 'int'
HACK vartype int arraypart 
ConvertRoseInitName()  storing variable declaration 'n' with unique value (nil)
new parameter:
foo chillAST_FunctionDecl::addParameter( 0x1a5b720  param n)   total of 1 parameters


***  ConvertRoseInitName()  x
initname x
varname 'x'
original vartype 0x54b2c550 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'x' with unique value (nil)
new parameter:
foo chillAST_FunctionDecl::addParameter( 0x1a5b920  param x)   total of 2 parameters


***  ConvertRoseInitName()  y
initname y
varname 'y'
original vartype 0x54b2c550 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'y' with unique value (nil)
new parameter:
foo chillAST_FunctionDecl::addParameter( 0x1a5bbc0  param y)   total of 3 parameters


***  ConvertRoseInitName()  z
initname z
varname 'z'
original vartype 0x54b2c550 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'z' with unique value (nil)
new parameter:
foo chillAST_FunctionDecl::addParameter( 0x1a5bde0  param z)   total of 4 parameters


***  ConvertRoseInitName()  f3
initname f3
varname 'f3'
original vartype 0x54b2c550 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'f3' with unique value (nil)
new parameter:
foo chillAST_FunctionDecl::addParameter( 0x1a5c040  param f3)   total of 5 parameters


***  ConvertRoseInitName()  f1
initname f1
varname 'f1'
original vartype 0x54b2c550 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'f1' with unique value (nil)
new parameter:
foo chillAST_FunctionDecl::addParameter( 0x1a5c340  param f1)   total of 6 parameters


***  ConvertRoseInitName()  w
initname w
varname 'w'
original vartype 0x54b2c550 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'w' with unique value (nil)
new parameter:
foo chillAST_FunctionDecl::addParameter( 0x1a5cbd0  param w)   total of 7 parameters
got body
8 statements in FunctionDecl body
chillCS is 0x1a5ccf0

statement 0     int i;
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgVariableDeclaration

ConvertRoseVarDecl() 
defdecl (nil)


***  ConvertRoseInitName()  i
initname i
varname 'i'
original vartype 0x54b2c430 'int'
HACK vartype int arraypart 
ConvertRoseInitName()  storing variable declaration 'i' with unique value (nil)
ConvertRoseVarDecl() storing variable declaration 'int i;' with unique value (nil) from  SgInitializedName

statement 1     int j;
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgVariableDeclaration

ConvertRoseVarDecl() 
defdecl (nil)


***  ConvertRoseInitName()  j
initname j
varname 'j'
original vartype 0x54b2c430 'int'
HACK vartype int arraypart 
ConvertRoseInitName()  storing variable declaration 'j' with unique value (nil)
ConvertRoseVarDecl() storing variable declaration 'int j;' with unique value (nil) from  SgInitializedName

statement 2     int k;
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgVariableDeclaration

ConvertRoseVarDecl() 
defdecl (nil)


***  ConvertRoseInitName()  k
initname k
varname 'k'
original vartype 0x54b2c430 'int'
HACK vartype int arraypart 
ConvertRoseInitName()  storing variable declaration 'k' with unique value (nil)
ConvertRoseVarDecl() storing variable declaration 'int k;' with unique value (nil) from  SgInitializedName

statement 3     for(i = 1;i <= 14;i++) {x[i] = 1.0;}
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgForStatement

ConvertRoseForStatement()  parent 0x7fb0afb2a290
for(i = 1;i <= 14;i++) {x[i] = 1.0;}
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement i = 1;

ConvertRoseBinaryOp()
i = 1
op is =
LHS is i
RHS is 1
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
ConvertRoseGenericAST(),  rose AST node of type SgLessOrEqualOp

ConvertRoseBinaryOp()
i <= 14
op is <=
LHS is i
RHS is 14
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
ConvertRoseGenericAST(),  rose AST node of type SgPlusPlusOp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgBasicBlock
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement x[i] = 1.0;

ConvertRoseBinaryOp()
x[i] = 1.0
op is =
LHS is x[i]
RHS is 1.0
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgPntrArrRefExp
ConvertRoseArrayRefExp()
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgCastExp
ConvertRoseCastExp()  casttype 2 = C Style    ConvertRoseGenericAST(),  rose AST node of type SgDoubleVal

hey! comments! on a ForStmt
1 preprocessing info

a comment  // known iteration count


statement 4     for(i = 1;i <= 14;i += 3) y[i] = 1.0;
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgForStatement

ConvertRoseForStatement()  parent 0x7fb0afb2a290
for(i = 1;i <= 14;i += 3) y[i] = 1.0;
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement i = 1;

ConvertRoseBinaryOp()
i = 1
op is =
LHS is i
RHS is 1
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
ConvertRoseGenericAST(),  rose AST node of type SgLessOrEqualOp

ConvertRoseBinaryOp()
i <= 14
op is <=
LHS is i
RHS is 14
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
ConvertRoseGenericAST(),  rose AST node of type SgPlusAssignOp

ConvertRoseBinaryOp()
i += 3
op is +=
LHS is i
RHS is 3
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement y[i] = 1.0;

ConvertRoseBinaryOp()
y[i] = 1.0
op is =
LHS is y[i]
RHS is 1.0
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgPntrArrRefExp
ConvertRoseArrayRefExp()
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgCastExp
ConvertRoseCastExp()  casttype 2 = C Style    ConvertRoseGenericAST(),  rose AST node of type SgDoubleVal

hey! comments! on a ForStmt
1 preprocessing info

a comment  // strided 


statement 5     for(i = n + 1;i <= n + 20;i += 3) z[i] = 1.0;
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgForStatement

ConvertRoseForStatement()  parent 0x7fb0afb2a290
for(i = n + 1;i <= n + 20;i += 3) z[i] = 1.0;
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement i = n + 1;

ConvertRoseBinaryOp()
i = n + 1
op is =
LHS is i
RHS is n + 1
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgAddOp

ConvertRoseBinaryOp()
n + 1
op is +
LHS is n
RHS is 1
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
ConvertRoseGenericAST(),  rose AST node of type SgLessOrEqualOp

ConvertRoseBinaryOp()
i <= n + 20
op is <=
LHS is i
RHS is n + 20
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgAddOp

ConvertRoseBinaryOp()
n + 20
op is +
LHS is n
RHS is 20
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
ConvertRoseGenericAST(),  rose AST node of type SgPlusAssignOp

ConvertRoseBinaryOp()
i += 3
op is +=
LHS is i
RHS is 3
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement z[i] = 1.0;

ConvertRoseBinaryOp()
z[i] = 1.0
op is =
LHS is z[i]
RHS is 1.0
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgPntrArrRefExp
ConvertRoseArrayRefExp()
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgCastExp
ConvertRoseCastExp()  casttype 2 = C Style    ConvertRoseGenericAST(),  rose AST node of type SgDoubleVal

hey! comments! on a ForStmt
1 preprocessing info

a comment  // lower and upper bounds are not constant (uses parameter n) 


statement 6     for(i = 0;i <= n;i++) {for(j = i;j <= i + n;j++) f3[i] = f3[i] + f1[j] * w[j - i];f3[i] =(f3[i] * 3.14);}
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgForStatement

ConvertRoseForStatement()  parent 0x7fb0afb2a290
for(i = 0;i <= n;i++) {for(j = i;j <= i + n;j++) f3[i] = f3[i] + f1[j] * w[j - i];f3[i] =(f3[i] * 3.14);}
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement i = 0;

ConvertRoseBinaryOp()
i = 0
op is =
LHS is i
RHS is 0
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
ConvertRoseGenericAST(),  rose AST node of type SgLessOrEqualOp

ConvertRoseBinaryOp()
i <= n
op is <=
LHS is i
RHS is n
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgPlusPlusOp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgBasicBlock
ConvertRoseGenericAST(),  rose AST node of type SgForStatement

ConvertRoseForStatement()  parent 0x7fb0afb2a290
for(j = i;j <= i + n;j++) f3[i] = f3[i] + f1[j] * w[j - i];
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement j = i;

ConvertRoseBinaryOp()
j = i
op is =
LHS is j
RHS is i
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgLessOrEqualOp

ConvertRoseBinaryOp()
j <= i + n
op is <=
LHS is j
RHS is i + n
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgAddOp

ConvertRoseBinaryOp()
i + n
op is +
LHS is i
RHS is n
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgPlusPlusOp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement f3[i] = f3[i] + f1[j] * w[j - i];

ConvertRoseBinaryOp()
f3[i] = f3[i] + f1[j] * w[j - i]
op is =
LHS is f3[i]
RHS is f3[i] + f1[j] * w[j - i]
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgPntrArrRefExp
ConvertRoseArrayRefExp()
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgAddOp

ConvertRoseBinaryOp()
f3[i] + f1[j] * w[j - i]
op is +
LHS is f3[i]
RHS is f1[j] * w[j - i]
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgPntrArrRefExp
ConvertRoseArrayRefExp()
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgMultiplyOp

ConvertRoseBinaryOp()
f1[j] * w[j - i]
op is *
LHS is f1[j]
RHS is w[j - i]
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgPntrArrRefExp
ConvertRoseArrayRefExp()
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgPntrArrRefExp
ConvertRoseArrayRefExp()
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgSubtractOp

ConvertRoseBinaryOp()
j - i
op is -
LHS is j
RHS is i
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement f3[i] =(f3[i] * 3.14);

ConvertRoseBinaryOp()
f3[i] =(f3[i] * 3.14)
op is =
LHS is f3[i]
RHS is (f3[i] * 3.14)
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgPntrArrRefExp
ConvertRoseArrayRefExp()
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgCastExp
ConvertRoseCastExp()  casttype 2 = C Style    ConvertRoseGenericAST(),  rose AST node of type SgMultiplyOp

ConvertRoseBinaryOp()
(f3[i] * 3.14)
op is *
LHS is f3[i]
RHS is 3.14
ir_rose.cc L1357, making a binop with no LHS no RHS but a parent
ConvertRoseGenericAST(),  rose AST node of type SgCastExp
ConvertRoseCastExp()  casttype 2 = C Style    ConvertRoseGenericAST(),  rose AST node of type SgPntrArrRefExp
ConvertRoseArrayRefExp()
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
ConvertRoseGenericAST(),  rose AST node of type SgDoubleVal

hey! comments! on a ForStmt
1 preprocessing info

a comment  // trapezoid


statement 7     return ;
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgReturnStmt
ConvertRoseReturnStmt() parent 0x7fb0afb2a290
ConvertRoseGenericAST(),  rose AST node of type SgNullExpression

functiondecl                     main blurb declarations
nodefile   /home/derick/dev/chill/chill-src/examples/chill/testcases/unroll.c
sourcefile /home/derick/dev/chill/chill-src/examples/chill/testcases/unroll.c
SAME FILE

ConvertRoseFunctionDecl( main )
got body
8 statements in FunctionDecl body
chillCS is 0x1b19e30

statement 0     float x[14];
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgVariableDeclaration

ConvertRoseVarDecl() 
defdecl (nil)


***  ConvertRoseInitName()  x
initname x
varname 'x'
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
original vartype 0x54b2c430 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'x' with unique value (nil)
ConvertRoseVarDecl() storing variable declaration 'float x[14];' with unique value (nil) from  SgInitializedName

statement 1     float y[14];
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgVariableDeclaration

ConvertRoseVarDecl() 
defdecl (nil)


***  ConvertRoseInitName()  y
initname y
varname 'y'
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
original vartype 0x54b2c430 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'y' with unique value (nil)
ConvertRoseVarDecl() storing variable declaration 'float y[14];' with unique value (nil) from  SgInitializedName

statement 2     float z[14];
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgVariableDeclaration

ConvertRoseVarDecl() 
defdecl (nil)


***  ConvertRoseInitName()  z
initname z
varname 'z'
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
original vartype 0x54b2c430 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'z' with unique value (nil)
ConvertRoseVarDecl() storing variable declaration 'float z[14];' with unique value (nil) from  SgInitializedName

statement 3     float f3[14];
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgVariableDeclaration

ConvertRoseVarDecl() 
defdecl (nil)


***  ConvertRoseInitName()  f3
initname f3
varname 'f3'
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
original vartype 0x54b2c430 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'f3' with unique value (nil)
ConvertRoseVarDecl() storing variable declaration 'float f3[14];' with unique value (nil) from  SgInitializedName

statement 4     float f1[14];
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgVariableDeclaration

ConvertRoseVarDecl() 
defdecl (nil)


***  ConvertRoseInitName()  f1
initname f1
varname 'f1'
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
original vartype 0x54b2c430 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'f1' with unique value (nil)
ConvertRoseVarDecl() storing variable declaration 'float f1[14];' with unique value (nil) from  SgInitializedName

statement 5     float w[14];
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgVariableDeclaration

ConvertRoseVarDecl() 
defdecl (nil)


***  ConvertRoseInitName()  w
initname w
varname 'w'
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
original vartype 0x54b2c430 'float'
HACK vartype float arraypart 
ConvertRoseInitName()  storing variable declaration 'w' with unique value (nil)
ConvertRoseVarDecl() storing variable declaration 'float w[14];' with unique value (nil) from  SgInitializedName

statement 6     foo(14,x,y,z,f3,f1,w);
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgExprStatement
ConvertRoseExprStatement() exprstatement foo(14,x,y,z,f3,f1,w);

ConvertRoseFunctionCallExp()
function  is of type SgFunctionRefExp
(rose) args 14,x,y,z,f3,f1,w
symbol->get_definingDeclaration() 0x7fb0ab9597c8  foo
there are 1 functions to compare to
func  0 unique 0x7fb0ab9597c8 foo  vs fdecl 0x7fb0ab9597c8 foo
found it at functiondeclaration 0 of 1
when looking for args, 11 subnodes
subnode 0  'expressions'
subnode 1  'expressions'
subnode 2  'expressions'
subnode 3  'expressions'
subnode 4  'expressions'
subnode 5  'expressions'
subnode 6  'expressions'
subnode 7  'operatorPosition'
subnode 8  'startOfConstruct'
subnode 9  'endOfConstruct'
subnode 10  'parent'
I think function call has up to ? 11 arguments
CONVERTING SUBNODE 0
14
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
CONVERTING SUBNODE 1
x
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
CONVERTING SUBNODE 2
y
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
CONVERTING SUBNODE 3
z
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
CONVERTING SUBNODE 4
f3
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
CONVERTING SUBNODE 5
f1
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
CONVERTING SUBNODE 6
w
ConvertRoseGenericAST(),  rose AST node of type SgVarRefExp
(CallExpr : (DeclRefExpr : foo (VarDecl : "'int ' 'n' ''" dim 0 ) (VarDecl : "'float ' 'x' '(fake2 : (NULL) ) '" dim 1 ) (VarDecl : "'float ' 'y' '(fake2 : (NULL) ) '" dim 1 ) (VarDecl : "'float ' 'z' '(fake2 : (NULL) ) '" dim 1 ) (VarDecl : "'float ' 'f3' '(fake2 : (NULL) ) '" dim 1 ) (VarDecl : "'float ' 'f1' '(fake2 : (NULL) ) '" dim 1 ) (VarDecl : "'float ' 'w' '(fake2 : (NULL) ) '" dim 1 ) ) ) 

foo(14, x, y, z, f3, f1, w)


statement 7     return 0;
calling ConvertRoseGenericAST
ConvertRoseGenericAST(),  rose AST node of type SgReturnStmt
ConvertRoseReturnStmt() parent 0x7fb0afb2a290
ConvertRoseGenericAST(),  rose AST node of type SgIntVal
top node 420/426    SgSymbolTable  (IGNORING)
unhandled top node 421/426 of type SgTypeTable
topnode 422 of 426, first == NULL??  blurb numeric_label
top node 423/426    Sg_File_Info
file /home/derick/dev/chill/chill-src/examples/chill/testcases/unroll.c  line 0   col 0
top node 424/426    Sg_File_Info
file /home/derick/dev/chill/chill-src/examples/chill/testcases/unroll.c  line 0   col 0
unhandled top node 425/426 of type SgSourceFile
(top)node has 2 children
node of type SourceFile is recursing to child 0 of type FunctionDecl
child 0 is functiondecl foo
node of type SourceFile is recursing to child 1 of type FunctionDecl
child 1 is functiondecl main
(top)node has 1 children
(top)node has 8 children
(top)node has 1 children
(top)node has 0 children
(top)node has 1 children
(top)node has 0 children
(top)node has 1 children
(top)node has 0 children
(top)node has 1 children
(top)node has 0 children
(top)node has 1 children
(top)node has 0 children
(top)node has 1 children
(top)node has 0 children
(top)node has 1 children
(top)node has 0 children
(top)node has 1 children
(top)node has 0 children

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
IR_chillCode::MergeNeighboringControlStructures  1 controls
control 0 is IR_CONTROL_LOOP

Loop::Loop(const IR_Control *control)
control type is 3   IR_CONTROL_BLOCK
2set last_compute_cg_ = NULL; 
in Loop::Loop, calling  build_ir_tree()

loop.cc, Loop::Loop() about to clone control
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  1 controls
controls.size() == 1  (NONZERO)
controls[0] is IR_CONTROL_LOOP
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  1 controls
controls.size() == 1  (NONZERO)
controls[0] is IR_CONTROL_BLOCK
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  0 controls
controls.size() == 0
build_ir_tree()  vector result has 1 parts
build_ir_tree()  vector result has 1 parts
build_ir_tree()  vector result has 1 parts

                                                  Loop::init_loop()
extract_ir_stmts()
ir_tree has 1 statements
extract_ir_stmts()   ir_tree.size() 1
IR_CONTROL_LOOP( recursing )
extract_ir_stmts()   ir_tree.size() 1
IR_CONTROL_BLOCK
nesting level stmt size = 1
1 statements?
i 0
stmt_nesting_level[0] = 1
in init_loop, made 1 stmts
max nesting level 1 at location 0
loop.cc L356  n_dim now max_nesting_level 1
itn = stmt[0]
parent
IR_CONTROL_LOOP  cur_dim 0
making CHILL scalar symbol i
index[0] = 'i'
align loops by names,

set relation variable names                      ****
Relation r(1)
extract information from loop/if structures
loop.cc l 462  IR_CONTROL_LOOP
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
loop.cc L441 insert the statement
loop.cc before extract
loop.cc stmt[0].loop_level has size n_dim 1
for int i < n_dim(1)
whew
                                        loop.cc   Loop::init_loop() END

after init_loop, 0 freevar
loop.cc after init_loop, 1 statements
IR_chillArrayRef::IR_chillArrayRef()  write 1
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
dv.first.size() 0


*** LOTS OF REDUCTIONS ***


i range 1
i 0
loop.cc reducCand.size() 0
loop.cc canReduce.size() 0
Loop::setLexicalOrder()  0 idxNames     active size 1  starting_order 0
Loop:setLexicalOrder() recursing
Loop::setLexicalOrder()  0 idxNames     active size 1  starting_order 0
LEAVING Loop::setLexicalOrder()  0 idxNames
LEAVING Loop::setLexicalOrder()  0 idxNames
loop.cc apply_xform( set )
loop vars 0 i
1 uninterpreted symbols
loop vars 0 i
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

loop.cc apply_xform( set )
loop vars 0 chill_t1
1 uninterpreted symbols
loop vars 0 chill_t1
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

loop.cc apply_xform( set )
loop vars 0 chill_t2
1 uninterpreted symbols
loop vars 0 chill_t2
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
OLD STMT DOES NOT HAVE INSPECTOR
loop_unroll.cc L1083 adding stmt 1

loop.cc Loop::printCode(  effort 3 )
Loop::printCode(), last_compute_cg_ == NULL
leaving Loop::printCode()

loop.cc Loop::getCode(  effort 3 )
Loop::getCode() last_compute_cg_ NOT NULL
2 stmts
calling last_compute_cgr_->printRepr()
t2 was already defined in the function body

loop.cc Loop::getCode( effort 3 )   DONE
IR_chillCode::ReplaceCode( old, *repr)
(CompoundStmt) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(UnaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(UnaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(UnaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ReturnStmt) uses default gatherVarDecls()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
IR_chillCode::MergeNeighboringControlStructures  1 controls
control 0 is IR_CONTROL_LOOP

Loop::Loop(const IR_Control *control)
control type is 3   IR_CONTROL_BLOCK
2set last_compute_cg_ = NULL; 
in Loop::Loop, calling  build_ir_tree()

loop.cc, Loop::Loop() about to clone control
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  1 controls
controls.size() == 1  (NONZERO)
controls[0] is IR_CONTROL_LOOP
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  1 controls
controls.size() == 1  (NONZERO)
controls[0] is IR_CONTROL_BLOCK
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  0 controls
controls.size() == 0
build_ir_tree()  vector result has 1 parts
build_ir_tree()  vector result has 1 parts
build_ir_tree()  vector result has 1 parts

                                                  Loop::init_loop()
extract_ir_stmts()
ir_tree has 1 statements
extract_ir_stmts()   ir_tree.size() 1
IR_CONTROL_LOOP( recursing )
extract_ir_stmts()   ir_tree.size() 1
IR_CONTROL_BLOCK
nesting level stmt size = 1
1 statements?
i 0
stmt_nesting_level[0] = 1
in init_loop, made 1 stmts
max nesting level 1 at location 0
loop.cc L356  n_dim now max_nesting_level 1
itn = stmt[0]
parent
IR_CONTROL_LOOP  cur_dim 0
making CHILL scalar symbol i
index[0] = 'i'
align loops by names,

set relation variable names                      ****
Relation r(1)
extract information from loop/if structures
loop.cc l 462  IR_CONTROL_LOOP
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
loop.cc L441 insert the statement
loop.cc before extract
loop.cc stmt[0].loop_level has size n_dim 1
for int i < n_dim(1)
whew
                                        loop.cc   Loop::init_loop() END

after init_loop, 0 freevar
loop.cc after init_loop, 1 statements
IR_chillArrayRef::IR_chillArrayRef()  write 1
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
dv.first.size() 0


*** LOTS OF REDUCTIONS ***


i range 1
i 0
loop.cc reducCand.size() 0
loop.cc canReduce.size() 0
Loop::setLexicalOrder()  0 idxNames     active size 1  starting_order 0
Loop:setLexicalOrder() recursing
Loop::setLexicalOrder()  0 idxNames     active size 1  starting_order 0
LEAVING Loop::setLexicalOrder()  0 idxNames
LEAVING Loop::setLexicalOrder()  0 idxNames
loop.cc apply_xform( set )
loop vars 0 i
chill_t1 was already defined in the function body
1 uninterpreted symbols
loop vars 0 i
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

loop.cc apply_xform( set )
loop vars 0 chill_t1
chill_t2 was already defined in the function body
1 uninterpreted symbols
loop vars 0 chill_t1
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

loop_basic.cc L828 adding stmt 1
loop.cc apply_xform( set )
loop vars 0 chill_t2
chill_t3 was already defined in the function body
2 uninterpreted symbols
loop vars 0 chill_t2
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

chill_t3 was already defined in the function body
OLD STMT DOES NOT HAVE INSPECTOR
loop_unroll.cc L1083 adding stmt 2

loop.cc Loop::printCode(  effort 3 )
Loop::printCode(), last_compute_cg_ == NULL
leaving Loop::printCode()

loop.cc Loop::getCode(  effort 3 )
Loop::getCode() last_compute_cg_ NOT NULL
3 stmts
calling last_compute_cgr_->printRepr()
t2 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body

loop.cc Loop::getCode( effort 3 )   DONE
IR_chillCode::ReplaceCode( old, *repr)
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(UnaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(UnaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ReturnStmt) uses default gatherVarDecls()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
IR_chillCode::MergeNeighboringControlStructures  1 controls
control 0 is IR_CONTROL_LOOP

Loop::Loop(const IR_Control *control)
control type is 3   IR_CONTROL_BLOCK
2set last_compute_cg_ = NULL; 
in Loop::Loop, calling  build_ir_tree()

loop.cc, Loop::Loop() about to clone control
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  1 controls
controls.size() == 1  (NONZERO)
controls[0] is IR_CONTROL_LOOP
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  1 controls
controls.size() == 1  (NONZERO)
controls[0] is IR_CONTROL_BLOCK
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  0 controls
controls.size() == 0
build_ir_tree()  vector result has 1 parts
build_ir_tree()  vector result has 1 parts
build_ir_tree()  vector result has 1 parts

                                                  Loop::init_loop()
extract_ir_stmts()
ir_tree has 1 statements
extract_ir_stmts()   ir_tree.size() 1
IR_CONTROL_LOOP( recursing )
extract_ir_stmts()   ir_tree.size() 1
IR_CONTROL_BLOCK
nesting level stmt size = 1
1 statements?
i 0
stmt_nesting_level[0] = 1
in init_loop, made 1 stmts
max nesting level 1 at location 0
loop.cc L356  n_dim now max_nesting_level 1
itn = stmt[0]
parent
IR_CONTROL_LOOP  cur_dim 0
making CHILL scalar symbol i
index[0] = 'i'
align loops by names,

set relation variable names                      ****
Relation r(1)
extract information from loop/if structures
loop.cc l 462  IR_CONTROL_LOOP
IR_chillCode::QueryExpOperation()
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym n ) *****

making CHILL scalar symbol n
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym n ) *****

making CHILL scalar symbol n
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()
IR_chillCode::QueryExpOperation()
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym n ) *****

making CHILL scalar symbol n
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
loop.cc L441 insert the statement
loop.cc before extract
loop.cc stmt[0].loop_level has size n_dim 1
for int i < n_dim(1)
whew
                                        loop.cc   Loop::init_loop() END

after init_loop, 1 freevar
loop.cc after init_loop, 1 statements
IR_chillArrayRef::IR_chillArrayRef()  write 1
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
dv.first.size() 0


*** LOTS OF REDUCTIONS ***


i range 1
i 0
loop.cc reducCand.size() 0
loop.cc canReduce.size() 0
Loop::setLexicalOrder()  0 idxNames     active size 1  starting_order 0
Loop:setLexicalOrder() recursing
Loop::setLexicalOrder()  0 idxNames     active size 1  starting_order 0
LEAVING Loop::setLexicalOrder()  0 idxNames
LEAVING Loop::setLexicalOrder()  0 idxNames
loop.cc apply_xform( set )
loop vars 0 i
chill_t1 was already defined in the function body
1 uninterpreted symbols
loop vars 0 i
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

loop.cc apply_xform( set )
loop vars 0 chill_t1
chill_t2 was already defined in the function body
1 uninterpreted symbols
loop vars 0 chill_t1
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

loop.cc apply_xform( set )
loop vars 0 chill_t2
chill_t3 was already defined in the function body
1 uninterpreted symbols
loop vars 0 chill_t2
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
chill_t3 was already defined in the function body
OLD STMT DOES NOT HAVE INSPECTOR
loop_unroll.cc L1083 adding stmt 1

loop.cc Loop::printCode(  effort 3 )
Loop::printCode(), last_compute_cg_ == NULL
leaving Loop::printCode()

loop.cc Loop::getCode(  effort 3 )
Loop::getCode() last_compute_cg_ NOT NULL
2 stmts
calling last_compute_cgr_->printRepr()
t2 was already defined in the function body
t2 was already defined in the function body

loop.cc Loop::getCode( effort 3 )   DONE
IR_chillCode::ReplaceCode( old, *repr)
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(UnaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(UnaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ReturnStmt) uses default gatherVarDecls()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
IR_chillCode::MergeNeighboringControlStructures  1 controls
control 0 is IR_CONTROL_LOOP

Loop::Loop(const IR_Control *control)
control type is 3   IR_CONTROL_BLOCK
2set last_compute_cg_ = NULL; 
in Loop::Loop, calling  build_ir_tree()

loop.cc, Loop::Loop() about to clone control
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  1 controls
controls.size() == 1  (NONZERO)
controls[0] is IR_CONTROL_LOOP
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  2 controls
controls.size() == 2  (NONZERO)
controls[0] is IR_CONTROL_LOOP
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  1 controls
controls.size() == 1  (NONZERO)
controls[0] is IR_CONTROL_BLOCK
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  0 controls
controls.size() == 0
build_ir_tree()  vector result has 1 parts
build_ir_tree()  vector result has 1 parts
controls[1] is IR_CONTROL_BLOCK
irtools.cc, build_ir_tree( control, parent)   building a CHILL IR tree 
irtools.cc L31   case IR_CONTROL_BLOCK

IR_chillCode::FindOneLevelControlStructure() yep CHILLcode
irtools.cc BACK FROM FindOneLevelControlStructure()  0 controls
controls.size() == 0
build_ir_tree()  vector result has 1 parts
build_ir_tree()  vector result has 2 parts
build_ir_tree()  vector result has 1 parts

                                                  Loop::init_loop()
extract_ir_stmts()
ir_tree has 1 statements
extract_ir_stmts()   ir_tree.size() 1
IR_CONTROL_LOOP( recursing )
extract_ir_stmts()   ir_tree.size() 2
IR_CONTROL_LOOP( recursing )
extract_ir_stmts()   ir_tree.size() 1
IR_CONTROL_BLOCK
IR_CONTROL_BLOCK
nesting level stmt size = 2
2 statements?
i 0
stmt_nesting_level[0] = 2
i 1
stmt_nesting_level[1] = 1
in init_loop, made 2 stmts
max nesting level 2 at location 0
loop.cc L356  n_dim now max_nesting_level 2
itn = stmt[0]
parent
IR_CONTROL_LOOP  cur_dim 1
making CHILL scalar symbol j
index[1] = 'j'
parent
IR_CONTROL_LOOP  cur_dim 0
making CHILL scalar symbol i
index[0] = 'i'
align loops by names,

set relation variable names                      ****
Relation r(2)
extract information from loop/if structures
loop.cc l 462  IR_CONTROL_LOOP
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym n ) *****

making CHILL scalar symbol n
IR_chillCode::QueryExpOperation()
loop.cc l 462  IR_CONTROL_LOOP
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym n ) *****

making CHILL scalar symbol n
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
loop.cc L441 insert the statement
loop.cc before extract
loop.cc stmt[0].loop_level has size n_dim 2
for int i < n_dim(2)
whew
max nesting level 1 at location 1
align loops by names,

set relation variable names                      ****
Relation r(2)
extract information from loop/if structures
loop.cc l 462  IR_CONTROL_LOOP
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym n ) *****

making CHILL scalar symbol n
IR_chillCode::QueryExpOperation()
ir_rose.cc  return IR_OP_CONSTANT
IR_chillCode::QueryExpOperation()
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym n ) *****

making CHILL scalar symbol n
loop.cc L441 insert the statement
loop.cc before extract
loop.cc stmt[1].loop_level has size n_dim 2
for int i < n_dim(2)
whew
                                        loop.cc   Loop::init_loop() END

after init_loop, 1 freevar
loop.cc after init_loop, 2 statements
IR_chillArrayRef::IR_chillArrayRef()  write 1
IR_chillArrayRef::IR_chillArrayRef()  write 0
IR_chillArrayRef::IR_chillArrayRef()  write 0
IR_chillArrayRef::IR_chillArrayRef()  write 0
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
dv.first.size() 3
k1 0
k1 1
k1 2
k2 0
IR_chillArrayRef::IR_chillArrayRef()  write 1
IR_chillArrayRef::IR_chillArrayRef()  write 0
IR_chillArrayRef::IR_chillArrayRef()  write 0
IR_chillArrayRef::IR_chillArrayRef()  write 0
IR_chillArrayRef::IR_chillArrayRef()  write 1
IR_chillArrayRef::IR_chillArrayRef()  write 0
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
dv.first.size() 6
k1 0
k1 1
k1 2
k1 3
k1 4
k1 5
IR_chillArrayRef::IR_chillArrayRef()  write 1
IR_chillArrayRef::IR_chillArrayRef()  write 0
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
IR_chillCode::QueryExpOperation()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym i ) *****

making CHILL scalar symbol i
dv.first.size() 1
k1 0


*** LOTS OF REDUCTIONS ***


i range 2
i 0
dep.hasEdge(0, 0)
tdv size 4
ij 0 0
ij 0 1
ij 0 2
ij 0 3
i 1
dep.hasEdge(1, 1)
tdv size 1
ij 1 0
loop.cc reducCand.size() 0
loop.cc canReduce.size() 0
Loop::setLexicalOrder()  0 idxNames     active size 2  starting_order 0
Loop:setLexicalOrder() recursing
Loop::setLexicalOrder()  0 idxNames     active size 2  starting_order 0
Loop:setLexicalOrder() recursing
Loop::setLexicalOrder()  0 idxNames     active size 2  starting_order 0
LEAVING Loop::setLexicalOrder()  0 idxNames
LEAVING Loop::setLexicalOrder()  0 idxNames
LEAVING Loop::setLexicalOrder()  0 idxNames
loop.cc apply_xform( set )
loop vars 0 i
loop vars 1 j
chill_t1 was already defined in the function body
chill_t2 was already defined in the function body
2 uninterpreted symbols
loop vars 0 i
loop vars 1 j
loop.cc stmt[*i].code =
loop vars 0 i
loop vars 1 j
chill_t1 was already defined in the function body
chill_t2 was already defined in the function body
2 uninterpreted symbols
loop vars 0 i
loop vars 1 j
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

over1 was already defined in the function body
loop_unroll.cc L581 adding stmt 2
(BinaryOperator) forgot to implement gatherDeclRefExpr()
(BinaryOperator) forgot to implement gatherDeclRefExpr()
(BinaryOperator) forgot to implement gatherDeclRefExpr()

*****                         new IR_xxxxScalarRef( ir, REF EXPR sym over1 ) *****


*****                         new IR_xxxxScalarRef( ir, REF EXPR sym n ) *****

loop.cc apply_xform( set )
loop vars 0 chill_t1
loop vars 1 chill_t2
chill_t3 was already defined in the function body
3 uninterpreted symbols
loop vars 0 chill_t1
loop vars 1 chill_t2
loop.cc stmt[*i].code =
loop vars 0 chill_t1
loop vars 1 chill_t2
chill_t3 was already defined in the function body
chill_t4 was already defined in the function body
3 uninterpreted symbols
loop vars 0 chill_t1
loop vars 1 chill_t2
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

loop_basic.cc L828 adding stmt 3
loop_basic.cc L828 adding stmt 4
loop.cc apply_xform( set )
loop vars 0 chill_t3
loop vars 1 chill_t4
5 uninterpreted symbols
loop vars 0 chill_t3
loop vars 1 chill_t4
loop.cc stmt[*i].code =
loop vars 0 chill_t3
loop vars 1 chill_t4
chill_t5 was already defined in the function body
chill_t6 was already defined in the function body
5 uninterpreted symbols
loop vars 0 chill_t3
loop vars 1 chill_t4
loop.cc stmt[*i].code =
loop.cc LEAVING apply_xform( set )

chill_t5 was already defined in the function body
loop_unroll.cc L740 adding stmt 5
chill_t5 was already defined in the function body
loop_unroll.cc L740 adding stmt 6

loop.cc Loop::printCode(  effort 3 )
Loop::printCode(), last_compute_cg_ == NULL
leaving Loop::printCode()
BIG IF
fail 0
big if true
CUDACHILL IS NOT DEFINED
calling ROSE code gen?    loop num 3 - 3

loop.cc Loop::getCode(  effort 3 )
Loop::getCode() last_compute_cg_ NOT NULL
7 stmts
calling last_compute_cgr_->printRepr()
t2 was already defined in the function body
t2 was already defined in the function body
t4 was already defined in the function body
t2 was already defined in the function body
t4 was already defined in the function body
t2 was already defined in the function body
t4 was already defined in the function body
t2 was already defined in the function body
t4 was already defined in the function body
t2 was already defined in the function body
t4 was already defined in the function body
over1 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t4 was already defined in the function body
t2 was already defined in the function body
t4 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t4 was already defined in the function body
t2 was already defined in the function body
t4 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
t2 was already defined in the function body
over1 was already defined in the function body
t4 was already defined in the function body
t4 was already defined in the function body

loop.cc Loop::getCode( effort 3 )   DONE
IR_chillCode::ReplaceCode( old, *repr)
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(UnaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(UnaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ReturnStmt) uses default gatherVarDecls()
(BinaryOperator) forgot to implement gatherVarUsage()
(IfStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(IfStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(IfStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
printing as part of the destructor
(FunctionDecl) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(IfStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(IfStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(ForStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(IfStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CompoundStmt) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(BinaryOperator) forgot to implement gatherVarUsage()
(CStyleCastExpr) forgot to implement gatherVarUsage()
(ArraySubscriptExpr) forgot to implement gatherVarUsage()
(ReturnStmt) forgot to implement gatherVarUsage()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(IfStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(IfStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(ForStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(IfStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CompoundStmt) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(BinaryOperator) uses default gatherVarDecls()
(CStyleCastExpr) uses default gatherVarDecls()
(ArraySubscriptExpr) uses default gatherVarDecls()
(ReturnStmt) uses default gatherVarDecls()
