Unhandled case in scanner: SourceFile
Looking for def int
Looking for def float
Looking for def float
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ReturnStmt
Unhandled case in scanner: CallExpr
Unhandled case in scanner: ReturnStmt
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: SourceFile
Unhandled case in scanner: FunctionDecl
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: VarDecl
Unhandled case in scanner: VarDecl
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: VarDecl
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: ForStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: UnaryOperator
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: BinaryOperator
Unhandled case in scanner: IntegerLiteral
Unhandled case in scanner: ArraySubscriptExpr
Unhandled case in scanner: ReturnStmt
Unhandled case in scanner: FunctionDecl
Unhandled case in scanner: CompoundStmt
Unhandled case in scanner: CallExpr
Unhandled case in scanner: ReturnStmt
Unhandled case in scanner: IntegerLiteral
Relation r   {[I] : TRUE }
s1: (dim:0) 
dependence graph:
0->0: A:flow(1) F:flow(1)

xforms:
{[In_1] -> [Out_1,Out_2,Out_3] : Out_3 = 0 && Out_2 = In_1 && Out_1 = 0 }


IS:
{[I] : 1 <= I <= 10 }


known:
{[In_1,In_2,In_3] : TRUE }


